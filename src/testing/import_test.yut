import "testing/im_external.ymd"

func external.bar () {
	return "bar"
}

func external.baz () {
	return "baz"
}

ImportTest = @{
	k_flag: "test.flag",

	testImportExternal : func (self) {
		Assert:NotNil(external)
		Assert:EQ("hashmap", typeof external)

		external:set(self.k_flag)
		Assert:EQ(self.k_flag, external:get())

		Assert:EQ("function", typeof external.foo)
		Assert:EQ("foo", external:foo())
	},

	testImportPartial : func (self) {
		Assert:EQ("function", typeof external.bar)
		Assert:EQ("bar", external:bar())

		Assert:EQ("function", typeof external.baz)
		Assert:EQ("baz", external:baz())
	},

	testImportData : func (self) {
		var data = import("testing/im_data.ymd")
		Assert:EQ("imported data", data.name)
		Assert:EQ(0x0fff, data.id)
		Assert:EQ("allow", data.token[0])
		Assert:EQ("1st", data.token[1])
		Assert:EQ("2nd", data.token[2])
		Assert:EQ("nested.inject.value", data.nested.inject.value)
		Assert:EQ(65535, data.nested.number)
	},

	testImportReached : func (self) {
		var ok = import("testing/im_external.ymd")
		Assert:Nil(ok)
		print(__loaded__)
	}
}
